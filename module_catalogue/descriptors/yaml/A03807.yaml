aim: In this module students will learn how to develop embedded real-time software
  applications for modern microcontrollers intended for the control of industrial
  processes and mechatronic systems.
assessment criteria:
- '<40%: Inability to develop simple software designs from user requirements.'
- '40%-49%: Able to specify interfacing and software requirements for simple discrete
  control systems.'
- '50%-59%: All the above and in addition be able to implement microcontroller-based
  solutions.'
- '60%-69%: In addition, be able to develop optimised designs for a common micro-controller.'
- '70%-100%: All previous to an excellent level. Be able to demonstrate an awareness
  of software quality and performance considerations when developing embedded software
  applications.'
assessment methods:
- learning outcomes: 1,2
  main: true
  name: Final Written Examination
  weighting: 50
- learning outcomes: 2,3,4
  main: true
  name: Continuous Assessment
  weighting: 50
- learning outcomes: 2,3,4
  main: false
  name: Assignment
  weighting: 25
- learning outcomes: 2,3,4
  main: false
  name: Assignment
  weighting: 25
basename: A03807_-_CaM_-_AutoAutoandIoT_-_Embedded_Systems
co-requisites: []
code: A03807
credits: 5
department: Computing and Mathematics
dirty: false
essential material: []
full title: Embedded Systems
indicative content:
- 'C Programming basics: Language features; Functions; Data Types; Structures; Pointers;
  Bit Manipulation'
- 'Interfacing Principles: I/O types; Memory-mapped I/O; Control and Status Registers'
- 'Digital I/O: Direction and Data Registers; Switch debouncing; Output control'
- Timers and Counters
- 'Analogue Inputs: Sampling theorem; Analogue-to-Digital Converter'
- 'Analogue Outputs: Pulse Width Modulation (PWM)'
- Microcontroller architecture
learning and teaching methods:
- Combination of lectures and lab-based practicals.
- The lectures will cover the theory and underlying technologies in embedded application
  development.
- The lab-based practicals, building on the theoretical knowledge from the lectures,
  provide the practical skills to develop and test microcontroller software using
  a modern microcontroller.
- Students will be encouraged to enhance their lab work and assessment submissions
  using self-directed research and learning into broader embedded systems topics.
learning modes:
- full time: 12
  name: Lecture
  part time: ''
- full time: 36
  name: Practical
  part time: ''
- full time: 87
  name: Independent Learning
  part time: ''
learning outcomes:
- Define the interfacing requirements for controlling an industrial process.
- Apply a control system software design to a common micro-controller.
- Code a microcontroller software system using C.
- Test and debug embedded control software on common microcontrollers.
level: Introductory
pre-requisites: []
programmes:
- null
- null
- programme: WD_KCOMP_B
  semester: 3
  stage: 2
  status: E
  timetable: COMP-0195
  title: Bachelor of Science (Honours) in Applied Computing
requested resources:
- 'COMPUTER LAB: BYOD Lab'
short title: Embedded Systems
supplementary material:
- 'Qian, K., D. Den Haring and L. Cao. \emph{Embedded Software Development with C}.
  New York: Springer, 2009.'
