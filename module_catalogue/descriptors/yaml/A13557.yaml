aim: This module will address a subset of the tools and technologies required to support
  the development of reliable, efficient and scalable software services. The focus
  is on use of Agile Development methods requiring test-driven developed and regular
  automated software builds. The aim is to assemble a toolkit of modern tools that
  enable the set-up of a software development process where this structure is automated
  by the tools. This course is designed to be very practical serving as a support
  to software development for the dissertation. Students taking this module should
  have strong object-oriented programming and design skills (e.g. be graduate of a
  BSc(Hons) or BEng involving significant programming experience) with a moderate
  understanding of computer architecture, operating systems and distributed computing.
assessment criteria:
- '<40%: Inability to comprehend and use agile development techniques to both support
  and manage medium scale software development projects. Unable to implement applications
  applying TDD principles.'
- '40%-59%: Able to comprehend and use agile development techniques to a moderate
  degree to both support and manage medium scale software development projects. Able
  to implement a substantial application and test it using effective TDD approaches.'
- '60%-69%: Able to comprehend and apply varying agile development techniques to a
  high degree to both support and manage medium scale software development projects.
  Able to implement a complex application using RESTful APIs and test it using very
  effective TDD approaches.'
- '70%-100%: All of the above to an excellent level. Demonstrates advanced utilisation
  of agile development techniques to excellently support and seamlessly manage medium
  scale software development projects. Ability to implement a very complex application
  using RESTful APIs and automate the testing using superior TDD approaches.'
assessment methods:
- learning outcomes: ''
  main: true
  name: Continuous Assessment
  weighting: 100
- learning outcomes: 1,2,3
  main: false
  name: Assignment
  weighting: 40
- learning outcomes: 2,3,4,5
  main: false
  name: Assignment
  weighting: 60
basename: A13557_-_CaM_-_SoftandWebDeve_-_Agile_Software_Development
co-requisites: []
code: A13557
credits: 10
department: Computing and Mathematics
dirty: false
essential material: []
full title: Agile Software Development
indicative content:
- Introduction to Agile Development e.g. object oriented programming review; agile
  practices; SOLID principles
- Test Driven Development (TDD) e.g. Principles of testing; unit testing; integration
  testing; performance testing; TDD patterns
- Developer Operations e.g. principles of automated build management and continuous
  integration
- Frameworks e.g. Web App Frameworks; Model-View-Controller; Reactive Patterns; RESTful
  APIs; Serialization and Parsing (such as XML, JSON, YAML)
learning and teaching methods:
- This module will be presented by a combination of lectures and computer-based practicals
  whilst capitalising on a web-enhanced learning environment.
- The lectures will be used to introduce new topics and their related concepts.
- A cooperative learning/peer tutoring approach (i.e. problem solving / class discussion)
  will be adopted during sessions.
- Self-directed learning will be encouraged throughout the duration of the module.
learning modes:
- full time: 24
  name: Lecture
  part time: 24
- full time: 24
  name: Practical
  part time: 24
- full time: 222
  name: Independent Learning
  part time: 222
learning outcomes:
- Construct applications using development methodologies.
- Distinguish between various approaches to test driven development and apply these
  in a consistent manner.
- Appraise the key tools in the modern agile tool chain coupled with the principles
  behind them.
- Integrate effective design principles into the architecture of agile applications.
- Develop a simple client/server application using standard RESTful APIs and demonstrate
  Test Driven Development techniques in this context.
level: Postgraduate
pre-requisites: []
programmes:
- null
- dirty: true
  programme: WD_KISYP_R
  semester: 0
  stage: 1
  status: E
  timetable: COMP-0055
  title: Master of Science in Computing (Information Systems Processes)
requested resources:
- 'COMPUTER LAB: BYOD Lab'
short title: Agile Software Development
supplementary material:
- 'Bloch, J. \emph{Effective Java}. NJ: Addison-Wesley, 2008.'
- 'Duvall, P.M. and S. Matyas. \emph{Continuous Integration -- improving software
  quality and reducing risk}. NJ: Pearson Education Inc, 2007.'
- 'Hunt, A. and D. Thomas. \emph{The Pragmatic Programmer: from journeyman to master}.
  Massachusetts: Addison-Wesley, 1999.'
- 'Langr, J., A. Hunt and D. Thomas. \emph{Pragmatic Unit Testing in Java 8 with JUnit}.
  NY: The Pragmatic Bookshelf, 2015.'
- 'Martin, R.C. \emph{The Clean Coder: A Code of Conduct for Professional Programmers}.
  1st Edition. New York: Prentice Hall, 2011.'
- 'Martin, R.C. and M. Martin. \emph{Agile Principles, Patt}\emph{erns, and Practices
  in C#}. NJ: Pearson Education, 2007.'
- 'Swicegood, T. \emph{Pragmatic Version control using Git}. NY: The Pragmatic Bookshelf,
  2008.'
- 'Waldo, J. \emph{Java -- the good parts}. NY: O''Reilly, 2010.'
