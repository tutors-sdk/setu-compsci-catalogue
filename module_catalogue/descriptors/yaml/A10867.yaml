aim: This module provides students with theoretical and practical concepts for the
  development of 3D games. This module will provide the students with advanced skills
  related to the development of 3D games using the Unity Game Engine (or similar software).
assessment criteria:
- '<40%: Inability to understand, explain the workings of or modify, a simple program.
  Inability to write simple programs using constructs as per learning outcome (3).
  Inability to use the programming environment to edit, run and debug programs.'
- '40%-49%: Able to understand, explain the workings of or modify a simple program.
  Able to write simple programs using constructs and data structures as per learning
  outcome (3). Able to use the programming environment to edit, run and debug programs
  comfortably. Can produce a prototype of a simple system.'
- '50%-59%: All the above and in addition correctly choose appropriate programming
  and data structures. Use pre-defined class libraries in programs (e.g. String).
  Show a high level of competency with programming environment.'
- '60%-69%: In addition, able to apply given solutions to new, similar problems. Starts
  to reference on-line documentation to examine new constructs, libraries. Starts
  to see programs in terms of system of components.'
- '70%-100%: All previous to an excellent level. Starts to understand the concept
  of good solutions.'
assessment methods:
- learning outcomes: 1,2,3,4,5
  main: true
  name: Continuous Assessment
  weighting: 100
- learning outcomes: 1,2,3
  main: false
  name: Assignment
  weighting: 25
- learning outcomes: 4,5
  main: false
  name: Assignment
  weighting: 25
- learning outcomes: 1,2,3
  main: false
  name: Assignment
  weighting: 50
basename: A10867_-_CaM_-_GameDeve_-_Advanced_3D_Game_Development
co-requisites: []
code: A10867
credits: 5
department: Computing and Mathematics
dirty: false
essential material: []
full title: Advanced 3D Game Development
indicative content:
- Texture mapping
- Artificial intelligence
- Design patterns
- Lighting and shaders
- Object-Oriented Programming in C#
learning and teaching methods:
- Since this module is focused on developing practical programming skills (i.e., game
  programming for mobile devices), the four contact hours will be delivered in the
  computer labs in the form of two 2-hour practicals.
- Due to the very practical nature of the skills to be acquired in this module, these
  practical sessions will be centred around the idea of learning by doing, whereby
  students develop proficiency in the specified skill set through guided activities,
  and whereby lecturers provide short formal presentations of relevant concepts and
  technologies, as well as practical tips, feedback, and best practices.
learning modes:
- full time: 48
  name: Practical
  part time: ''
- full time: 87
  name: Independent Learning
  part time: ''
learning outcomes:
- Implement game mechanics using C# (or similar language) and understand how object
  oriented programming can improve and optimize their game.
- Manage advanced texturing (bump- or normal mapping), lighting (e.g., global illumination),
  animations (blend-tree) or AI (ray-casting or group movement) techniques.
- Compare and apply common design patterns for game development.
- Integrate a version control system into the development cycle.
- Develop networked games using built-in networking capabilities.
level: Advanced
pre-requisites: []
programmes:
- null
- null
- dirty: true
  programme: WD_KCOMP_B
  semester: 8
  stage: 4
  status: E
  timetable: GAME-0009
  title: Bachelor of Science (Honours) in Applied Computing
requested resources:
- 'EQUIPMENT: MAC PCs'
- 'Room Type: Computer Lab'
short title: Advanced 3D Game Development
supplementary material:
- 'Nystrom, R. \emph{Game Programming Patterns}. NY: Genever Benning, 2014.'
- 'Okita, A. \emph{Learning C# Programming with Unity 3D}. NY: CRC Press, 2014.'
